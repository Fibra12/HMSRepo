<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="RTCManagement" Id="{dd2c8799-33d5-44cd-b1b4-029a21e73318}" SpecialFunc="None">
    <Declaration><![CDATA[(*======================FB RTC MANAGEMENT V0.1================*)
// Changelog[ 22/09/2022] M.Dimas Andiwjaya 

// Inisialisasi variabel
FUNCTION_BLOCK RTCManagement
VAR_IN_OUT
	RTC_Data 			: stRTC_Data; // Data jam waktu aktual
END_VAR
VAR_INPUT
	bFL_DoneRTC			: BOOL; // Sinyal selesai sinkronisasi jam RTC
	DateAndTime_GetTime	: TIMESTRUCT; // Struktur waktu dari sistem
	DateAndTime_RTC		: DT; // Waktu RTC
END_VAR
VAR_OUTPUT
	EnableToCaptureData	: BOOL; // Sinyal untuk menangkap data waktu
	EnableGetTime		: BOOL; // Sinyal untuk mendapatkan waktu
	EnableRTC			: BOOL; // Sinyal untuk mengaktifkan RTC
	RTC_dataSecond 		: INT ; // Detik dari jam RTC
	RTC_Data_Time8 		: STRING; // Waktu lengkap dalam format string
END_VAR
VAR

	RealTimeClock		: RTC; // Variabel objek RTC
	DateAndTime			: TIMESTRUCT; // Struktur waktu
	SeqIndex			: INT; // Indeks urutan langkah dalam program
	
	wYear				: INT; // Tahun dari struktur waktu
	Input_RTC			: DATE_AND_TIME; // Data waktu masukan RTC
	
	RTC_Data_Time1 		: STRING; // Bagian waktu dalam format string
	RTC_Data_Time2 		: STRING;
	RTC_Data_Time3 		: STRING;
	RTC_Data_Time4 		: STRING;
	RTC_Data_Time5 		: STRING;
	RTC_Data_Time6 		: STRING;
	RTC_Data_Time7 		: STRING;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE SeqIndex OF
	0:
		EnableGetTime := TRUE; // Aktifkan pengambilan waktu
		IF NOT (DateAndTime_GetTime.wYear=0) THEN // Jika tahun bukan 0 (data waktu valid)
			SeqIndex := 10; // Pergi ke langkah 10
		END_IF
	10:
		EnableGetTime := FALSE; // Matikan pengambilan waktu
		Input_RTC := SYSTEMTIME_TO_DT(DateAndTime_GetTime); // Konversi struktur waktu ke format DT
		EnableRTC := TRUE; // Aktifkan RTC
		IF bFL_DoneRTC THEN // Jika proses sinkronisasi RTC selesai
			SeqIndex := 20; // Pergi ke langkah 20
		END_IF
	20:
		DateAndTime := DT_TO_SYSTEMTIME(DateAndTime_RTC); // Konversi waktu RTC ke struktur waktu
		// Simpan komponen waktu dalam variabel RTC_Data
		RTC_Data.iDT_Year := WORD_TO_INT(DateAndTime.wYear);
		RTC_Data.iDT_Month := WORD_TO_INT(DateAndTime.wMonth);
		RTC_Data.iDT_Date := WORD_TO_INT(DateAndTime.wDay);
		RTC_Data.iDT_Hour := WORD_TO_INT(DateAndTime.wHour);
		RTC_Data.iDT_Minute := WORD_TO_INT(DateAndTime.wMinute);
		RTC_Data.iDT_Second := WORD_TO_INT(DateAndTime.wSecond);	
		RTC_dataSecond := RTC_Data.iDT_Second ; // Simpan detik ke variabel terpisah
		RTC_Data.iDT_MilliSecond := WORD_TO_INT(DateAndTime.wMilliseconds);
	
		// Konversi data waktu ke format string dengan menambahkan nol di depan jika diperlukan
		RTC_Data.strDT_MilliSecond := INT_TO_STRING(RTC_Data.iDT_MilliSecond);
		IF RTC_Data.iDT_Second <= 9 THEN
			RTC_Data.strDT_Second := CONCAT('0',INT_TO_STRING(RTC_Data.iDT_Second));
		ELSE
			RTC_Data.strDT_Second := INT_TO_STRING(RTC_Data.iDT_Second);
		END_IF
		
		IF RTC_Data.iDT_Minute <= 9 THEN
			RTC_Data.strDT_Minute := CONCAT('0',INT_TO_STRING(RTC_Data.iDT_Minute));
		ELSE
			RTC_Data.strDT_Minute := INT_TO_STRING(RTC_Data.iDT_Minute);
		END_IF
		
		IF RTC_Data.iDT_Hour <= 9 THEN
			RTC_Data.strDT_Hour := CONCAT('0',INT_TO_STRING(RTC_Data.iDT_Hour));
		ELSE
			RTC_Data.strDT_Hour := INT_TO_STRING(RTC_Data.iDT_Hour);
		END_IF
		
		RTC_Data.strDT_Year := INT_TO_STRING (RTC_Data.iDT_Year);
		
		IF RTC_Data.iDT_Month <= 9 THEN
			RTC_Data.strDT_Month := CONCAT('0',INT_TO_STRING(RTC_Data.iDT_Month));
		ELSE
			RTC_Data.strDT_Month := INT_TO_STRING(RTC_Data.iDT_Month);
		END_IF
		IF RTC_DATA.iDT_Date <=9 THEN 
			RTC_Data.strDT_Date := CONCAT('0',INT_TO_STRING(RTC_Data.iDT_Date));
		ELSE
			RTC_Data.strDT_Date := INT_TO_STRING(RTC_Data.iDT_Date);
		END_IF
		// Gabungkan komponen waktu dalam format string untuk mendapatkan waktu lengkap
		RTC_Data_Time1 := Concat(':',RTC_Data.strDT_Minute);
		RTC_Data_Time2 := Concat(RTC_Data.strDT_Hour,RTC_Data_Time1);
		RTC_Data_Time3 := Concat(' ',RTC_Data_Time2);
		RTC_Data_Time4 := Concat(RTC_Data.strDT_Year,RTC_Data_Time3);
		RTC_Data_Time5 := Concat ('/',RTC_Data_Time4);
		RTC_Data_Time6 := Concat(RTC_Data.strDT_Month,RTC_Data_Time5);
		RTC_Data_Time7 := Concat('/',RTC_Data_Time6);
		RTC_Data_Time8 := Concat (RTC_Data.strDT_Date,RTC_Data_Time7);
END_CASE
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>