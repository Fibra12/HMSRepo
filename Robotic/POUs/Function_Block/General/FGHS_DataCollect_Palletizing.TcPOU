<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FGHS_DataCollect_Palletizing" Id="{267513fd-c549-43c2-88a0-5f1da95b57d7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FGHS_DataCollect_Palletizing

VAR_INPUT
	ENI					: BOOL;
	bResetBuffer		: BOOL;
	bReset				: BOOL;
	bHandshake			: BOOL;
	bDonePick			: BOOL;
	bDonePlace			: BOOL;	
	iCycleBox			: UINT;
	iLine				: STRING;
	Barcode				: STRING;
	PalletID			: STRING;	
	Timestamp			: DT;
	ProductData			: stProductInfo;
END_VAR


VAR_OUTPUT
	ENO					: BOOL;
	Error				: BOOL;
	ErrorMsg			: STRING;
	DoneScan			: BOOL;
END_VAR

VAR_IN_OUT
	arBuffer			: stPalletTrackingData;
END_VAR

VAR PERSISTENT
	EmptyArray			: stPalletTrackingData;
	TempBarcode			: STRING;
	DataTimer			: TON;
	R_DonePlace			: R_TRIG;
	R_DonePick			: R_TRIG;
	T_DonePick			: TOF;
	SeqIndex			: INT;
	SeqIndex2			: INT;
	Index				: UINT;
	LastCycle			: UINT;
	BarcodeEAN			: STRING;
	CodeVariant			: STRING;
	BarcodeLinkUp		: STRING;
	BarcodeResult		: STRING;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Mengaktifkan ENO jika ENI aktif
IF ENI THEN
	ENO	:= TRUE;  // Mengaktifkan ENO jika ENI aktif
END_IF

// Mereset variabel Error dan ErrorMsg jika bReset aktif
IF bReset THEN
	Error 		:= FALSE;  // Mereset variabel Error menjadi FALSE jika bReset aktif
	ErrorMsg	:= '';     // Mengosongkan variabel ErrorMsg jika bReset aktif
END_IF

// Mengambil data Barcode saat Picking ke Variabel Temp
CASE SeqIndex OF 
	0:
		DoneScan	:= FALSE;  // Mengatur DoneScan menjadi FALSE jika SeqIndex = 0
		IF bDonePick THEN
			SeqIndex	:= 1;   // Mengubah SeqIndex menjadi 1 jika bDonePick aktif
		END_IF
		
	1:
		TempBarcode	:= Barcode;  // Menyimpan data Barcode ke dalam TempBarcode jika SeqIndex = 1
		DoneScan	:= TRUE;        // Mengatur DoneScan menjadi TRUE jika SeqIndex = 1
		//IF arBuffer.BarcodeProduct[iCycleBox] = TempBarcode THEN
		//	Warning	:= TRUE;
		//END_IF
		
		IF NOT bDonePick THEN
			SeqIndex	:= 0;   // Mengubah SeqIndex menjadi 0 jika bDonePick tidak aktif
		END_IF
END_CASE

// Mengambil data Barcode dan Timestamp saat Produk ditempatkan di Pallet
R_DonePlace(CLK:= bDonePlace);
IF R_DonePlace.Q THEN
	arBuffer.BarcodeProduct[iCycleBox]		:= TempBarcode;      // Menyimpan data Barcode ke dalam array Buffer
	arBuffer.BarcodeProductTime[iCycleBox]	:= Timestamp;        // Menyimpan Timestamp ke dalam array Buffer
END_IF

// Memindahkan ID Pallet
IF iCycleBox > 1 AND PalletID <> '' THEN
	arBuffer.PalletID			:= PalletID;           // Menyimpan ID Pallet ke dalam array Buffer
	arBuffer.PalletCreationDate	:= Timestamp;          // Menyimpan Timestamp ke dalam array Buffer
	arBuffer.EANVariant			:= ProductData.EANVariant;   // Menyimpan EANVariant ke dalam array Buffer
	arBuffer.CodeVariant		:= ProductData.CodeVariant;    // Menyimpan CodeVariant ke dalam array Buffer
	arBuffer.CounterProduct		:= iCycleBox-1;       // Menyimpan Counter Produk ke dalam array Buffer
ELSIF (PalletID = '' AND bHandshake) OR bResetBuffer THEN //
	arBuffer					:= EmptyArray;       // Me-reset array Buffer jika PalletID kosong atau bHandshake aktif
END_IF

IF iCycleBox > 1 THEN
	// Mendeteksi Duplikat Barcode
	IF arBuffer.BarcodeProduct[iCycleBox] = arBuffer.BarcodeProduct[iCycleBox-1] THEN // OR (R_DonePick.Q AND TempBarcode = arBuffer.BarcodeProduct[iCycleBox-1])) AND arBuffer.BarcodeProduct[iCycleBox-1] <> ''
		Error		:= TRUE;    // Mengatur Error menjadi TRUE jika terdeteksi duplikat Barcode
		ErrorMsg	:= CONCAT('Duplicate Barcode at Placing ',iLine);  // Memberikan pesan Error tentang duplikat Barcode
	END_IF	
	
	(* Memisahkan Barcode *)
	BarcodeResult	:= arBuffer.BarcodeProduct[iCycleBox-1];   // Memisahkan data Barcode
	BarcodeEAN		:= DELETE(DELETE(BarcodeResult,3,0),24,15);  // Memisahkan EAN dari Barcode
	CodeVariant		:= DELETE(DELETE(BarcodeResult,19,0),20,3);  // Memisahkan Code Variant dari Barcode
	BarcodeLinkUp	:= DELETE(DELETE(BarcodeResult,33,0),6,3);   // Memisahkan LinkUp dari Barcode
	
	// Mendeteksi Barcode yang Salah Tempat
	IF ProductData.LinkUpSource <> BarcodeLinkUp AND BarcodeResult <> '' AND (ProductData.LinkUpSource <> '0' OR ProductData.LinkUpSource <> '') THEN
		Error		:= TRUE;   // Mengatur Error menjadi TRUE jika terdeteksi Barcode yang salah tempat
		ErrorMsg	:= CONCAT('Mixing Barcode at Placing ',iLine);  // Memberikan pesan Error tentang Barcode yang salah tempat
	END_IF 
END_IF

// Melepaskan Barcode 
IF LastCycle <> iCycleBox AND iCycleBox > 1 AND PalletID <> '' AND NOT ENI THEN
	FOR Index := iCycleBox+1 TO 60 BY 1 DO	
		arBuffer.BarcodeProduct[Index]		:= EmptyArray.BarcodeProduct[Index];  // Melepaskan Barcode dari array Buffer
		arBuffer.BarcodeProductTime[Index]	:= EmptyArray.BarcodeProductTime[Index];  // Melepaskan Timestamp dari array Buffer
	END_FOR
	LastCycle	:= iCycleBox;   // Menyimpan siklus terakhir sebagai LastCycle
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="FGHS_DataCollect_Palletizing">
      <LineId Id="1059" Count="76" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>