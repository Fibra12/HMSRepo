<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="OEECounter" Id="{a699669c-e5f6-45a1-83ee-70edfbe271b4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK OEECounter
VAR_INPUT
	ENI					: BOOL;
	CurrentTime			: DT;
	dt_Production		: ShiftCounter;
END_VAR
VAR_OUTPUT 
	bGetData			: BOOL;
END_VAR
VAR_IN_OUT PERSISTENT
	dt_OEE				: sOEECounter;
END_VAR
VAR PERSISTENT
	StartedDate			: DATE;
	StartedShift		: UINT;
	Sts_DailyShiftEnd	: BOOL;
	SaveData			: BOOL;
	i					: INT;
	j					: INT;
	k					: INT;
	l					: INT;
	m					: INT;
	n					: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Get Time & Parsing
dt_OEE.DateCurrent := DT_TO_DATE(CurrentTime);
dt_OEE.TimeCurrent := DT_TO_TOD(CurrentTime);

dt_OEE.TimeShift[1].StartShift	:= TOD#06:00:00;
dt_OEE.TimeShift[2].StartShift	:= TOD#14:00:00;
dt_OEE.TimeShift[3].StartShift	:= TOD#22:00:00;

dt_OEE.TimeShift[1].EndShift	:= TOD#14:00:00;
dt_OEE.TimeShift[2].EndShift	:= TOD#22:00:00;
dt_OEE.TimeShift[3].EndShift	:= TOD#06:00:00;

(**Get Data**)
IF (( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[1].EndShift) AND ( dt_OEE.TimeCurrent < dt_OEE.TimeShift[1].EndShift + T#3S)) 
    OR (( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[2].EndShift) AND ( dt_OEE.TimeCurrent < dt_OEE.TimeShift[2].EndShift + T#3S)) 
    OR (( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[3].EndShift) AND ( dt_OEE.TimeCurrent < dt_OEE.TimeShift[3].EndShift + T#3S))  THEN
    IF NOT  bGetData THEN
         bGetData := TRUE;
         StartedDate	:=  dt_OEE.DateCurrent;
         StartedShift	:=  dt_OEE.CurrentShift;
    END_IF;
ELSE
     bGetData := FALSE;
END_IF;

(**Shift Checking**)
IF NOT  SaveData THEN
    IF ( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[1].StartShift) AND ( dt_OEE.TimeCurrent <  dt_OEE.TimeShift[1].EndShift) THEN
         dt_OEE.CurrentShift := 1;
    ELSIF ( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[2].StartShift) AND ( dt_OEE.TimeCurrent <  dt_OEE.TimeShift[2].EndShift) THEN
         dt_OEE.CurrentShift := 2;
    ELSIF ( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[3].StartShift) OR ( dt_OEE.TimeCurrent <  dt_OEE.TimeShift[3].EndShift) THEN
         dt_OEE.CurrentShift := 3;
    END_IF;
END_IF;

(** Function to Clear Data Record **)
(*IF dt_OEE.Reset THEN	
	    FOR m := 1 TO 6 BY 1 DO
	        FOR n := 0 TO 2 BY 1 DO
	            dt_OEE.CounterRecord[m, n].Data1 		:= 0;
	            dt_OEE.CounterRecord[m, n].Data2		:= 0;
	            dt_OEE.CounterRecord[m, n].Data3 		:= 0;
	            dt_OEE.CounterRecord[m, n].Data4 		:= 0;
				dt_OEE.CounterRecord[m, n].ProductCode 	:='';
	        END_FOR;
	    END_FOR;
END_IF;*)

(** Function to copy daily information to history AND Reset Timer**)
IF (( dt_OEE.TimeCurrent >  dt_OEE.TimeShift[3].EndShift) AND ( dt_OEE.TimeCurrent < ( dt_OEE.TimeShift[3].EndShift+T#3S))) AND NOT Sts_DailyShiftEnd THEN
    SaveData := TRUE;
	    FOR j := 5 TO 0 BY -1 DO
	        FOR k := 0 TO 2 BY 1 DO
	            dt_OEE.CounterRecord[j + 1, k].Data1 		:= dt_OEE.CounterRecord[j, k].Data1;
	            dt_OEE.CounterRecord[j + 1, k].Data2 		:= dt_OEE.CounterRecord[j, k].Data2;
	            dt_OEE.CounterRecord[j + 1, k].Data3 		:= dt_OEE.CounterRecord[j, k].Data3;
	            dt_OEE.CounterRecord[j + 1, k].Data4 		:= dt_OEE.CounterRecord[j, k].Data4;
				dt_OEE.CounterRecord[j + 1, k].ProductCode 	:= dt_OEE.CounterRecord[j, k].ProductCode;
	            dt_OEE.DateRecord[j + 1] 					:= dt_OEE.DateRecord[j];
	        END_FOR;
	    END_FOR;
		
	    FOR l := 0 TO 2 BY 1 DO
	        dt_OEE.CounterRecord[0, l].Data1 		:= 0;
	        dt_OEE.CounterRecord[0, l].Data2 		:= 0;
	        dt_OEE.CounterRecord[0, l].Data3 		:= 0;
	        dt_OEE.CounterRecord[0, l].Data4 		:= 0;
			dt_OEE.CounterRecord[0, l].ProductCode 		:='';
	        Sts_DailyShiftEnd := TRUE;
	    END_FOR;
ELSE
    SaveData := FALSE;
END_IF;

IF dt_OEE.CurrentShift <> 1 THEN
    Sts_DailyShiftEnd := FALSE;
END_IF;

CASE t_OEE.CurrentShift OF
	1:
		dt_OEE.DateRecord[0] := StartedDate;
		dt_OEE.CounterRecord[ 0,0].ProductCode := Dt_Production.ProductCode;
		dt_OEE.CounterRecord[ 0,0].Data1 := Dt_Production.Data1;
		dt_OEE.CounterRecord[ 0,0].Data2 := Dt_Production.Data2;
		dt_OEE.CounterRecord[ 0,0].Data3 := Dt_Production.Data3;
	2:
		dt_OEE.CounterRecord[ 0,1].ProductCode := Dt_Production.ProductCode;
		dt_OEE.CounterRecord[ 0,1].Data1 := Dt_Production.Data1;
		dt_OEE.CounterRecord[ 0,1].Data2 := Dt_Production.Data2;
		dt_OEE.CounterRecord[ 0,1].Data3 := Dt_Production.Data3;
	3:
		dt_OEE.CounterRecord[ 0,2].ProductCode := Dt_Production.ProductCode;
		dt_OEE.CounterRecord[ 0,2].Data1 := Dt_Production.Data1;
		dt_OEE.CounterRecord[ 0,2].Data2 := Dt_Production.Data2;
		dt_OEE.CounterRecord[ 0,2].Data3 := Dt_Production.Data3;
END_CASE;

(**Writting Data to Current Shift**)
//======================== Line ========================//

dt_OEE.HMI_Counter[0] := dt_OEE.CounterRecord[Dt_OEE.HMI_NumberPrev,0];
dt_OEE.HMI_Counter[1] := dt_OEE.CounterRecord[Dt_OEE.HMI_NumberPrev,1];
dt_OEE.HMI_Counter[2] := dt_OEE.CounterRecord[Dt_OEE.HMI_NumberPrev,2];

//Total Counter
Dt_OEE.TotalCounter.Data1	:= dt_OEE.HMI_Counter[0].Data1 + dt_OEE.HMI_Counter[1].Data1 + dt_OEE.HMI_Counter[2].Data1;
Dt_OEE.TotalCounter.Data2	:= dt_OEE.HMI_Counter[0].Data2 + dt_OEE.HMI_Counter[1].Data2 + dt_OEE.HMI_Counter[2].Data2;
Dt_OEE.TotalCounter.Data3	:= dt_OEE.HMI_Counter[0].Data3 + dt_OEE.HMI_Counter[1].Data3 + dt_OEE.HMI_Counter[2].Data3;
Dt_OEE.TotalCounter.Data4	:= dt_OEE.HMI_Counter[0].Data4 + dt_OEE.HMI_Counter[1].Data4 + dt_OEE.HMI_Counter[2].Data4;

 
IF dt_OEE.HMI_NumberPrev < 0 THEN
	dt_OEE.HMI_NumberPrev := 6;
ELSIF dt_OEE.HMI_NumberPrev > 6  THEN
	dt_OEE.HMI_NumberPrev := 0;
END_IF;]]></ST>
    </Implementation>
    <LineIds Name="OEECounter">
      <LineId Id="9" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="213" Count="1" />
      <LineId Id="212" Count="0" />
      <LineId Id="208" Count="2" />
      <LineId Id="39" Count="0" />
      <LineId Id="494" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="495" Count="9" />
      <LineId Id="395" Count="2" />
      <LineId Id="505" Count="7" />
      <LineId Id="406" Count="66" />
      <LineId Id="474" Count="9" />
      <LineId Id="300" Count="0" />
      <LineId Id="202" Count="3" />
      <LineId Id="94" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>