<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_Picking" Id="{fdff446c-2967-4117-a65b-4b2f8ef905eb}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Picking
VAR_INPUT
	Enable				: BOOL;
	bSensor1			: BOOL;
	bSensor2			: BOOL;
	bSensor3			: BOOL;
	bSensor4			: BOOL;
	StsCentering_Rtc	: BOOL;
	StsGapMaker_Rtc		: BOOL;
	StsGapMaker_Adv		: BOOL;
	bPickDone			: BOOL;
	Sts_Motor			: BOOL;
	BarcodeChecked		: BOOL;
	iRotate				: BOOL;
	iRotateInt			: USINT;
	BarcodePlace		: INT;
	Tmr_Check			: TIME;
	Tmr_Centering		: TIME;
	
END_VAR
VAR_OUTPUT
	PickReady			: BOOL;
	TrigBarcode			: BOOL;
	Sts_Busy			: BOOL;
	Motor_ON			: BOOL;
	Centering			: BOOL;
	GapMaker_Rtc		: BOOL;
	GapMaker_Adv		: BOOL;
	BigBox				: BOOL;
	SmallBox			: BOOL;
	oRotate				: BOOL;
	oRotateInt			: USINT;
	BoxType				: USINT;
	PickLine			: INT;
	CurrentJob			: STRING;
	SeqIndex			: INT;
END_VAR

VAR
	Sequence			: INT;
	DataTimer			: TON;
	Timeout				: TON;
	Box: INT;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF Enable THEN // Jika Enable aktif
    CASE Sequence OF // Memulai kasus berdasarkan nilai Sequence
        0:      (* Check Pneumatic Centering And GapMaker *)
			CurrentJob	:='Check Pneumatic Centering And GapMaker';
			Motor_ON	:= FALSE;
			GapMaker_Rtc:= TRUE;
			Centering	:= FALSE;
			IF StsCentering_Rtc AND StsGapMaker_Rtc THEN // Jika kondisi pneumatik terpenuhi
				DataTimer(IN:= TRUE, PT:=T#100MS); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:= FALSE); // Hentikan timer
					GapMaker_Rtc:= FALSE;
					Sequence	:= 5; // Lanjut ke langkah berikutnya
				END_IF
			END_IF
			
		5:		(* Motor On *)
			CurrentJob	:='Motor On';
			Motor_ON	:= TRUE;
			IF bSensor1 AND bSensor2 THEN // Jika kedua sensor terdeteksi
				DataTimer(IN:= TRUE, PT:=Tmr_Check); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:= FALSE); // Hentikan timer
					Sequence	:= 20; // Lanjut ke langkah berikutnya
				END_IF
			ELSE // Jika salah satu atau kedua sensor tidak terdeteksi
				DataTimer(IN:= FALSE);
				Sequence	:= 10; // Kembali ke langkah sebelumnya
			END_IF
			
		10:      (* Pneumatic GapMaker Advanced *)
			CurrentJob	:='Pneumatic GapMaker Advanced';
			GapMaker_Adv:= TRUE;
			IF StsGapMaker_Adv THEN // Jika kondisi pneumatik terpenuhi
				DataTimer(IN:= TRUE, PT:=T#100MS); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:= FALSE); // Hentikan timer
					GapMaker_Adv:= FALSE;
					Sequence	:= 15; // Lanjut ke langkah berikutnya
				END_IF
			END_IF
			
		15:		(* Check Sensor *)
			CurrentJob	:='Check Sensor';
			Sts_Busy	:= FALSE;
			IF bSensor1 THEN // Jika sensor terdeteksi
				Sts_Busy	:= TRUE;
				DataTimer(IN:= TRUE, PT:=Tmr_Check); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:= FALSE); // Hentikan timer
					Sequence	:= 20; // Lanjut ke langkah berikutnya
				END_IF
			END_IF
			
					
		20:		(* Pneumatic GapMaker Retract *)
			CurrentJob	:='Pneumatic GapMaker Retract';
			GapMaker_Rtc:= TRUE;
			Sts_Busy	:= TRUE;
			IF bSensor2 AND StsGapMaker_Rtc THEN // Jika sensor terdeteksi dan kondisi pneumatik terpenuhi
				DataTimer(IN:= TRUE, PT:=Tmr_Check); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:= FALSE); // Hentikan timer
					Motor_ON	:= FALSE;
					GapMaker_Rtc:= FALSE;
					IF NOT Sts_Motor THEN // Jika motor tidak aktif
						Sequence	:= 30; // Lanjut ke langkah berikutnya
					END_IF
				END_IF
			ELSIF NOT bSensor1 AND NOT bSensor2 THEN // Jika sensor tidak terdeteksi
				Timeout(IN:=TRUE, PT:=T#3S); // Mulai timer timeout
				IF Timeout.Q THEN // Jika timer timeout selesai
					Timeout(IN:=FALSE); // Hentikan timer timeout
					BigBox		:= FALSE;
					SmallBox	:= FALSE;
					PickReady	:= FALSE;
					TrigBarcode	:= FALSE;
					oRotate		:= FALSE;
					oRotateInt	:= 0;
					BoxType		:= 0;
					PickLine	:= 0;
					Sequence	:= 0;
				END_IF
			END_IF
			
		30:		(* Centering Box *)
			CurrentJob	:='Centering Box';
			DataTimer(IN:= TRUE, PT:=Tmr_Centering); // Mulai timer
			IF DataTimer.Q THEN // Jika timer selesai
				Centering	:= FALSE;
			ELSE
				Centering	:= TRUE;
			END_IF
			IF StsCentering_Rtc AND DataTimer.Q THEN // Jika kondisi pneumatik terpenuhi dan timer selesai
				DataTimer(IN:= FALSE); // Hentikan timer
				Sequence	:= 40; // Lanjut ke langkah berikutnya
			END_IF
			
		40:		(* Trigger Barcode Reader *)
			CurrentJob	:='Trigger Barcode Reader';
			TrigBarcode	:= TRUE;
			IF bSensor3 THEN // Jika sensor terdeteksi
				BigBox	:= TRUE;
			ELSE
				BigBox	:= FALSE;
			END_IF
			IF NOT bSensor4 AND NOT bSensor3 THEN // Jika sensor tidak terdeteksi
				SmallBox:= TRUE;
			ELSE
				SmallBox:= FALSE;
			END_IF
			
			IF bSensor3 THEN // Jika sensor terdeteksi
				BoxType	:= 3; // Tipe kotak: Standard Case
			ELSIF bSensor2 AND NOT bSensor3 THEN // Jika sensor terdeteksi dan sensor lain tidak terdeteksi
				BoxType	:= 2; // Tipe kotak: Small Case
			ELSE
				BoxType	:= 1; // Tipe kotak: LU 18
			END_IF
			IF BarcodeChecked THEN // Jika barcode telah diperiksa
				Sequence	:= 45; // Lanjut ke langkah berikutnya
			ELSIF NOT bSensor1 AND NOT bSensor2 THEN // Jika sensor tidak terdeteksi
				Timeout(IN:=TRUE, PT:=T#3S); // Mulai timer timeout
				IF Timeout.Q THEN // Jika timer timeout selesai
					Timeout(IN:=FALSE); // Hentikan timer timeout
					BigBox		:= FALSE;
					SmallBox	:= FALSE;
					PickReady	:= FALSE;
					TrigBarcode	:= FALSE;
					oRotate		:= FALSE;
					oRotateInt	:= 0;
					Box

Type		:= 0;
					PickLine	:= 0;
					Sequence	:= 0;
				END_IF
			END_IF
			
		45:
			CurrentJob	:='Check...';
			PickLine	:= BarcodePlace;
			oRotate		:= iRotate;
			oRotateInt	:= iRotateInt;
			DataTimer(IN:=TRUE, PT:=T#10MS); // Mulai timer
			IF DataTimer.Q THEN // Jika timer selesai
				Sequence	:= 50; // Lanjut ke langkah berikutnya
			END_IF
			
			
		50:		(* Pick Ready *)
			CurrentJob	:='Pick Ready';
			PickReady	:= TRUE;
			IF bPickDone THEN // Jika pengambilan selesai
				Sequence	:= 60; // Lanjut ke langkah berikutnya
			ELSIF NOT bSensor1 AND NOT bSensor2 THEN // Jika sensor tidak terdeteksi
				DataTimer(IN:=TRUE, PT:=T#3S); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:=FALSE); // Hentikan timer
					BigBox		:= FALSE;
					SmallBox	:= FALSE;
					PickReady	:= FALSE;
					TrigBarcode	:= FALSE;
					oRotate		:= FALSE;
					oRotateInt	:= 0;
					BoxType		:= 0;
					PickLine	:= 0;
					Sequence	:= 0;
				END_IF
			END_IF
			
		60:
			IF NOT bPickDone THEN // Jika pengambilan tidak selesai
				BigBox		:= FALSE;
				SmallBox	:= FALSE;
				PickReady	:= FALSE;
				TrigBarcode	:= FALSE;
				oRotate		:= FALSE;
				oRotateInt	:= 0;
				BoxType		:= 0;
				PickLine	:= 0;
				Sequence	:= 0;
			ELSIF NOT bSensor1 AND NOT bSensor2 THEN // Jika sensor tidak terdeteksi
				DataTimer(IN:=TRUE, PT:=T#3S); // Mulai timer
				IF DataTimer.Q THEN // Jika timer selesai
					DataTimer(IN:=FALSE); // Hentikan timer
					BigBox		:= FALSE;
					SmallBox	:= FALSE;
					PickReady	:= FALSE;
					TrigBarcode	:= FALSE;
					oRotate		:= FALSE;
					oRotateInt	:= 0;
					BoxType		:= 0;
					PickLine	:= 0;
					Sequence	:= 0;
				END_IF
			END_IF
			
    END_CASE; // Selesai pemilihan kasus
ELSE // Jika Enable tidak aktif
   Sequence 	:= 0; // Set Sequence ke nilai awal
   oRotateInt	:= 0; // Set oRotateInt ke nilai awal
   BoxType		:= 0; // Set BoxType ke nilai awal
   CurrentJob	:='Machine Stopped'; // Set pesan status
   Sts_Busy		:= TRUE; // Set status ke sibuk
   BigBox		:= FALSE; // Set status kotak besar ke tidak aktif
   SmallBox		:= FALSE; // Set status kotak kecil ke tidak aktif
   PickReady 	:= FALSE; // Set status pick siap ke tidak aktif
   Motor_ON 	:= FALSE; // Set status motor ke tidak aktif
   Centering	:= FALSE; // Set status centering ke tidak aktif
   GapMaker_Rtc	:= FALSE; // Set status GapMaker RTC ke tidak aktif
   GapMaker_Adv	:= FALSE; // Set status GapMaker Adv ke tidak aktif
   TrigBarcode	:= FALSE; // Set status triger barcode ke tidak aktif
   DataTimer(IN := FALSE); // Hentikan timer
END_IF; // Selesai kondisi IF

SeqIndex	:= Sequence; // Set nilai Sequence ke SeqIndex

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>